package com.yttx.yttxps.model;

import java.util.ArrayList;
import java.util.List;

public class DictExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table TDICT
     *
     * @mbggenerated Sun Feb 14 15:29:35 CST 2016
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table TDICT
     *
     * @mbggenerated Sun Feb 14 15:29:35 CST 2016
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table TDICT
     *
     * @mbggenerated Sun Feb 14 15:29:35 CST 2016
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TDICT
     *
     * @mbggenerated Sun Feb 14 15:29:35 CST 2016
     */
    public DictExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TDICT
     *
     * @mbggenerated Sun Feb 14 15:29:35 CST 2016
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TDICT
     *
     * @mbggenerated Sun Feb 14 15:29:35 CST 2016
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TDICT
     *
     * @mbggenerated Sun Feb 14 15:29:35 CST 2016
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TDICT
     *
     * @mbggenerated Sun Feb 14 15:29:35 CST 2016
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TDICT
     *
     * @mbggenerated Sun Feb 14 15:29:35 CST 2016
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TDICT
     *
     * @mbggenerated Sun Feb 14 15:29:35 CST 2016
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TDICT
     *
     * @mbggenerated Sun Feb 14 15:29:35 CST 2016
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TDICT
     *
     * @mbggenerated Sun Feb 14 15:29:35 CST 2016
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TDICT
     *
     * @mbggenerated Sun Feb 14 15:29:35 CST 2016
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TDICT
     *
     * @mbggenerated Sun Feb 14 15:29:35 CST 2016
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table TDICT
     *
     * @mbggenerated Sun Feb 14 15:29:35 CST 2016
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andFsDictnoIsNull() {
            addCriterion("FS_DICTNO is null");
            return (Criteria) this;
        }

        public Criteria andFsDictnoIsNotNull() {
            addCriterion("FS_DICTNO is not null");
            return (Criteria) this;
        }

        public Criteria andFsDictnoEqualTo(String value) {
            addCriterion("FS_DICTNO =", value, "fsDictno");
            return (Criteria) this;
        }

        public Criteria andFsDictnoNotEqualTo(String value) {
            addCriterion("FS_DICTNO <>", value, "fsDictno");
            return (Criteria) this;
        }

        public Criteria andFsDictnoGreaterThan(String value) {
            addCriterion("FS_DICTNO >", value, "fsDictno");
            return (Criteria) this;
        }

        public Criteria andFsDictnoGreaterThanOrEqualTo(String value) {
            addCriterion("FS_DICTNO >=", value, "fsDictno");
            return (Criteria) this;
        }

        public Criteria andFsDictnoLessThan(String value) {
            addCriterion("FS_DICTNO <", value, "fsDictno");
            return (Criteria) this;
        }

        public Criteria andFsDictnoLessThanOrEqualTo(String value) {
            addCriterion("FS_DICTNO <=", value, "fsDictno");
            return (Criteria) this;
        }

        public Criteria andFsDictnoLike(String value) {
            addCriterion("FS_DICTNO like", value, "fsDictno");
            return (Criteria) this;
        }

        public Criteria andFsDictnoNotLike(String value) {
            addCriterion("FS_DICTNO not like", value, "fsDictno");
            return (Criteria) this;
        }

        public Criteria andFsDictnoIn(List<String> values) {
            addCriterion("FS_DICTNO in", values, "fsDictno");
            return (Criteria) this;
        }

        public Criteria andFsDictnoNotIn(List<String> values) {
            addCriterion("FS_DICTNO not in", values, "fsDictno");
            return (Criteria) this;
        }

        public Criteria andFsDictnoBetween(String value1, String value2) {
            addCriterion("FS_DICTNO between", value1, value2, "fsDictno");
            return (Criteria) this;
        }

        public Criteria andFsDictnoNotBetween(String value1, String value2) {
            addCriterion("FS_DICTNO not between", value1, value2, "fsDictno");
            return (Criteria) this;
        }

        public Criteria andFsParentnoIsNull() {
            addCriterion("FS_PARENTNO is null");
            return (Criteria) this;
        }

        public Criteria andFsParentnoIsNotNull() {
            addCriterion("FS_PARENTNO is not null");
            return (Criteria) this;
        }

        public Criteria andFsParentnoEqualTo(String value) {
            addCriterion("FS_PARENTNO =", value, "fsParentno");
            return (Criteria) this;
        }

        public Criteria andFsParentnoNotEqualTo(String value) {
            addCriterion("FS_PARENTNO <>", value, "fsParentno");
            return (Criteria) this;
        }

        public Criteria andFsParentnoGreaterThan(String value) {
            addCriterion("FS_PARENTNO >", value, "fsParentno");
            return (Criteria) this;
        }

        public Criteria andFsParentnoGreaterThanOrEqualTo(String value) {
            addCriterion("FS_PARENTNO >=", value, "fsParentno");
            return (Criteria) this;
        }

        public Criteria andFsParentnoLessThan(String value) {
            addCriterion("FS_PARENTNO <", value, "fsParentno");
            return (Criteria) this;
        }

        public Criteria andFsParentnoLessThanOrEqualTo(String value) {
            addCriterion("FS_PARENTNO <=", value, "fsParentno");
            return (Criteria) this;
        }

        public Criteria andFsParentnoLike(String value) {
            addCriterion("FS_PARENTNO like", value, "fsParentno");
            return (Criteria) this;
        }

        public Criteria andFsParentnoNotLike(String value) {
            addCriterion("FS_PARENTNO not like", value, "fsParentno");
            return (Criteria) this;
        }

        public Criteria andFsParentnoIn(List<String> values) {
            addCriterion("FS_PARENTNO in", values, "fsParentno");
            return (Criteria) this;
        }

        public Criteria andFsParentnoNotIn(List<String> values) {
            addCriterion("FS_PARENTNO not in", values, "fsParentno");
            return (Criteria) this;
        }

        public Criteria andFsParentnoBetween(String value1, String value2) {
            addCriterion("FS_PARENTNO between", value1, value2, "fsParentno");
            return (Criteria) this;
        }

        public Criteria andFsParentnoNotBetween(String value1, String value2) {
            addCriterion("FS_PARENTNO not between", value1, value2, "fsParentno");
            return (Criteria) this;
        }

        public Criteria andFsDictnameIsNull() {
            addCriterion("FS_DICTNAME is null");
            return (Criteria) this;
        }

        public Criteria andFsDictnameIsNotNull() {
            addCriterion("FS_DICTNAME is not null");
            return (Criteria) this;
        }

        public Criteria andFsDictnameEqualTo(String value) {
            addCriterion("FS_DICTNAME =", value, "fsDictname");
            return (Criteria) this;
        }

        public Criteria andFsDictnameNotEqualTo(String value) {
            addCriterion("FS_DICTNAME <>", value, "fsDictname");
            return (Criteria) this;
        }

        public Criteria andFsDictnameGreaterThan(String value) {
            addCriterion("FS_DICTNAME >", value, "fsDictname");
            return (Criteria) this;
        }

        public Criteria andFsDictnameGreaterThanOrEqualTo(String value) {
            addCriterion("FS_DICTNAME >=", value, "fsDictname");
            return (Criteria) this;
        }

        public Criteria andFsDictnameLessThan(String value) {
            addCriterion("FS_DICTNAME <", value, "fsDictname");
            return (Criteria) this;
        }

        public Criteria andFsDictnameLessThanOrEqualTo(String value) {
            addCriterion("FS_DICTNAME <=", value, "fsDictname");
            return (Criteria) this;
        }

        public Criteria andFsDictnameLike(String value) {
            addCriterion("FS_DICTNAME like", value, "fsDictname");
            return (Criteria) this;
        }

        public Criteria andFsDictnameNotLike(String value) {
            addCriterion("FS_DICTNAME not like", value, "fsDictname");
            return (Criteria) this;
        }

        public Criteria andFsDictnameIn(List<String> values) {
            addCriterion("FS_DICTNAME in", values, "fsDictname");
            return (Criteria) this;
        }

        public Criteria andFsDictnameNotIn(List<String> values) {
            addCriterion("FS_DICTNAME not in", values, "fsDictname");
            return (Criteria) this;
        }

        public Criteria andFsDictnameBetween(String value1, String value2) {
            addCriterion("FS_DICTNAME between", value1, value2, "fsDictname");
            return (Criteria) this;
        }

        public Criteria andFsDictnameNotBetween(String value1, String value2) {
            addCriterion("FS_DICTNAME not between", value1, value2, "fsDictname");
            return (Criteria) this;
        }

        public Criteria andFsRemIsNull() {
            addCriterion("FS_REM is null");
            return (Criteria) this;
        }

        public Criteria andFsRemIsNotNull() {
            addCriterion("FS_REM is not null");
            return (Criteria) this;
        }

        public Criteria andFsRemEqualTo(String value) {
            addCriterion("FS_REM =", value, "fsRem");
            return (Criteria) this;
        }

        public Criteria andFsRemNotEqualTo(String value) {
            addCriterion("FS_REM <>", value, "fsRem");
            return (Criteria) this;
        }

        public Criteria andFsRemGreaterThan(String value) {
            addCriterion("FS_REM >", value, "fsRem");
            return (Criteria) this;
        }

        public Criteria andFsRemGreaterThanOrEqualTo(String value) {
            addCriterion("FS_REM >=", value, "fsRem");
            return (Criteria) this;
        }

        public Criteria andFsRemLessThan(String value) {
            addCriterion("FS_REM <", value, "fsRem");
            return (Criteria) this;
        }

        public Criteria andFsRemLessThanOrEqualTo(String value) {
            addCriterion("FS_REM <=", value, "fsRem");
            return (Criteria) this;
        }

        public Criteria andFsRemLike(String value) {
            addCriterion("FS_REM like", value, "fsRem");
            return (Criteria) this;
        }

        public Criteria andFsRemNotLike(String value) {
            addCriterion("FS_REM not like", value, "fsRem");
            return (Criteria) this;
        }

        public Criteria andFsRemIn(List<String> values) {
            addCriterion("FS_REM in", values, "fsRem");
            return (Criteria) this;
        }

        public Criteria andFsRemNotIn(List<String> values) {
            addCriterion("FS_REM not in", values, "fsRem");
            return (Criteria) this;
        }

        public Criteria andFsRemBetween(String value1, String value2) {
            addCriterion("FS_REM between", value1, value2, "fsRem");
            return (Criteria) this;
        }

        public Criteria andFsRemNotBetween(String value1, String value2) {
            addCriterion("FS_REM not between", value1, value2, "fsRem");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table TDICT
     *
     * @mbggenerated do_not_delete_during_merge Sun Feb 14 15:29:35 CST 2016
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table TDICT
     *
     * @mbggenerated Sun Feb 14 15:29:35 CST 2016
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}