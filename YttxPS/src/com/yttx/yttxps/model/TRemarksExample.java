package com.yttx.yttxps.model;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class TRemarksExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table TREMARKS
	 * @mbggenerated  Sun Jan 24 19:51:04 CST 2016
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table TREMARKS
	 * @mbggenerated  Sun Jan 24 19:51:04 CST 2016
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table TREMARKS
	 * @mbggenerated  Sun Jan 24 19:51:04 CST 2016
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table TREMARKS
	 * @mbggenerated  Sun Jan 24 19:51:04 CST 2016
	 */
	public TRemarksExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table TREMARKS
	 * @mbggenerated  Sun Jan 24 19:51:04 CST 2016
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table TREMARKS
	 * @mbggenerated  Sun Jan 24 19:51:04 CST 2016
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table TREMARKS
	 * @mbggenerated  Sun Jan 24 19:51:04 CST 2016
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table TREMARKS
	 * @mbggenerated  Sun Jan 24 19:51:04 CST 2016
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table TREMARKS
	 * @mbggenerated  Sun Jan 24 19:51:04 CST 2016
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table TREMARKS
	 * @mbggenerated  Sun Jan 24 19:51:04 CST 2016
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table TREMARKS
	 * @mbggenerated  Sun Jan 24 19:51:04 CST 2016
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table TREMARKS
	 * @mbggenerated  Sun Jan 24 19:51:04 CST 2016
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table TREMARKS
	 * @mbggenerated  Sun Jan 24 19:51:04 CST 2016
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table TREMARKS
	 * @mbggenerated  Sun Jan 24 19:51:04 CST 2016
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table TREMARKS
	 * @mbggenerated  Sun Jan 24 19:51:04 CST 2016
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		protected void addCriterionForJDBCDate(String condition, Date value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value.getTime()),
					property);
		}

		protected void addCriterionForJDBCDate(String condition,
				List<Date> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
			Iterator<Date> iter = values.iterator();
			while (iter.hasNext()) {
				dateList.add(new java.sql.Date(iter.next().getTime()));
			}
			addCriterion(condition, dateList, property);
		}

		protected void addCriterionForJDBCDate(String condition, Date value1,
				Date value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value1.getTime()),
					new java.sql.Date(value2.getTime()), property);
		}

		public Criteria andFiSeqIsNull() {
			addCriterion("FI_SEQ is null");
			return (Criteria) this;
		}

		public Criteria andFiSeqIsNotNull() {
			addCriterion("FI_SEQ is not null");
			return (Criteria) this;
		}

		public Criteria andFiSeqEqualTo(BigDecimal value) {
			addCriterion("FI_SEQ =", value, "fiSeq");
			return (Criteria) this;
		}

		public Criteria andFiSeqNotEqualTo(BigDecimal value) {
			addCriterion("FI_SEQ <>", value, "fiSeq");
			return (Criteria) this;
		}

		public Criteria andFiSeqGreaterThan(BigDecimal value) {
			addCriterion("FI_SEQ >", value, "fiSeq");
			return (Criteria) this;
		}

		public Criteria andFiSeqGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("FI_SEQ >=", value, "fiSeq");
			return (Criteria) this;
		}

		public Criteria andFiSeqLessThan(BigDecimal value) {
			addCriterion("FI_SEQ <", value, "fiSeq");
			return (Criteria) this;
		}

		public Criteria andFiSeqLessThanOrEqualTo(BigDecimal value) {
			addCriterion("FI_SEQ <=", value, "fiSeq");
			return (Criteria) this;
		}

		public Criteria andFiSeqIn(List<BigDecimal> values) {
			addCriterion("FI_SEQ in", values, "fiSeq");
			return (Criteria) this;
		}

		public Criteria andFiSeqNotIn(List<BigDecimal> values) {
			addCriterion("FI_SEQ not in", values, "fiSeq");
			return (Criteria) this;
		}

		public Criteria andFiSeqBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("FI_SEQ between", value1, value2, "fiSeq");
			return (Criteria) this;
		}

		public Criteria andFiSeqNotBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("FI_SEQ not between", value1, value2, "fiSeq");
			return (Criteria) this;
		}

		public Criteria andFsOrderIdIsNull() {
			addCriterion("FS_ORDER_ID is null");
			return (Criteria) this;
		}

		public Criteria andFsOrderIdIsNotNull() {
			addCriterion("FS_ORDER_ID is not null");
			return (Criteria) this;
		}

		public Criteria andFsOrderIdEqualTo(String value) {
			addCriterion("FS_ORDER_ID =", value, "fsOrderId");
			return (Criteria) this;
		}

		public Criteria andFsOrderIdNotEqualTo(String value) {
			addCriterion("FS_ORDER_ID <>", value, "fsOrderId");
			return (Criteria) this;
		}

		public Criteria andFsOrderIdGreaterThan(String value) {
			addCriterion("FS_ORDER_ID >", value, "fsOrderId");
			return (Criteria) this;
		}

		public Criteria andFsOrderIdGreaterThanOrEqualTo(String value) {
			addCriterion("FS_ORDER_ID >=", value, "fsOrderId");
			return (Criteria) this;
		}

		public Criteria andFsOrderIdLessThan(String value) {
			addCriterion("FS_ORDER_ID <", value, "fsOrderId");
			return (Criteria) this;
		}

		public Criteria andFsOrderIdLessThanOrEqualTo(String value) {
			addCriterion("FS_ORDER_ID <=", value, "fsOrderId");
			return (Criteria) this;
		}

		public Criteria andFsOrderIdLike(String value) {
			addCriterion("FS_ORDER_ID like", value, "fsOrderId");
			return (Criteria) this;
		}

		public Criteria andFsOrderIdNotLike(String value) {
			addCriterion("FS_ORDER_ID not like", value, "fsOrderId");
			return (Criteria) this;
		}

		public Criteria andFsOrderIdIn(List<String> values) {
			addCriterion("FS_ORDER_ID in", values, "fsOrderId");
			return (Criteria) this;
		}

		public Criteria andFsOrderIdNotIn(List<String> values) {
			addCriterion("FS_ORDER_ID not in", values, "fsOrderId");
			return (Criteria) this;
		}

		public Criteria andFsOrderIdBetween(String value1, String value2) {
			addCriterion("FS_ORDER_ID between", value1, value2, "fsOrderId");
			return (Criteria) this;
		}

		public Criteria andFsOrderIdNotBetween(String value1, String value2) {
			addCriterion("FS_ORDER_ID not between", value1, value2, "fsOrderId");
			return (Criteria) this;
		}

		public Criteria andFsOperIdIsNull() {
			addCriterion("FS_OPER_ID is null");
			return (Criteria) this;
		}

		public Criteria andFsOperIdIsNotNull() {
			addCriterion("FS_OPER_ID is not null");
			return (Criteria) this;
		}

		public Criteria andFsOperIdEqualTo(String value) {
			addCriterion("FS_OPER_ID =", value, "fsOperId");
			return (Criteria) this;
		}

		public Criteria andFsOperIdNotEqualTo(String value) {
			addCriterion("FS_OPER_ID <>", value, "fsOperId");
			return (Criteria) this;
		}

		public Criteria andFsOperIdGreaterThan(String value) {
			addCriterion("FS_OPER_ID >", value, "fsOperId");
			return (Criteria) this;
		}

		public Criteria andFsOperIdGreaterThanOrEqualTo(String value) {
			addCriterion("FS_OPER_ID >=", value, "fsOperId");
			return (Criteria) this;
		}

		public Criteria andFsOperIdLessThan(String value) {
			addCriterion("FS_OPER_ID <", value, "fsOperId");
			return (Criteria) this;
		}

		public Criteria andFsOperIdLessThanOrEqualTo(String value) {
			addCriterion("FS_OPER_ID <=", value, "fsOperId");
			return (Criteria) this;
		}

		public Criteria andFsOperIdLike(String value) {
			addCriterion("FS_OPER_ID like", value, "fsOperId");
			return (Criteria) this;
		}

		public Criteria andFsOperIdNotLike(String value) {
			addCriterion("FS_OPER_ID not like", value, "fsOperId");
			return (Criteria) this;
		}

		public Criteria andFsOperIdIn(List<String> values) {
			addCriterion("FS_OPER_ID in", values, "fsOperId");
			return (Criteria) this;
		}

		public Criteria andFsOperIdNotIn(List<String> values) {
			addCriterion("FS_OPER_ID not in", values, "fsOperId");
			return (Criteria) this;
		}

		public Criteria andFsOperIdBetween(String value1, String value2) {
			addCriterion("FS_OPER_ID between", value1, value2, "fsOperId");
			return (Criteria) this;
		}

		public Criteria andFsOperIdNotBetween(String value1, String value2) {
			addCriterion("FS_OPER_ID not between", value1, value2, "fsOperId");
			return (Criteria) this;
		}

		public Criteria andFtDateIsNull() {
			addCriterion("FT_DATE is null");
			return (Criteria) this;
		}

		public Criteria andFtDateIsNotNull() {
			addCriterion("FT_DATE is not null");
			return (Criteria) this;
		}

		public Criteria andFtDateEqualTo(Date value) {
			addCriterionForJDBCDate("FT_DATE =", value, "ftDate");
			return (Criteria) this;
		}

		public Criteria andFtDateNotEqualTo(Date value) {
			addCriterionForJDBCDate("FT_DATE <>", value, "ftDate");
			return (Criteria) this;
		}

		public Criteria andFtDateGreaterThan(Date value) {
			addCriterionForJDBCDate("FT_DATE >", value, "ftDate");
			return (Criteria) this;
		}

		public Criteria andFtDateGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("FT_DATE >=", value, "ftDate");
			return (Criteria) this;
		}

		public Criteria andFtDateLessThan(Date value) {
			addCriterionForJDBCDate("FT_DATE <", value, "ftDate");
			return (Criteria) this;
		}

		public Criteria andFtDateLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("FT_DATE <=", value, "ftDate");
			return (Criteria) this;
		}

		public Criteria andFtDateIn(List<Date> values) {
			addCriterionForJDBCDate("FT_DATE in", values, "ftDate");
			return (Criteria) this;
		}

		public Criteria andFtDateNotIn(List<Date> values) {
			addCriterionForJDBCDate("FT_DATE not in", values, "ftDate");
			return (Criteria) this;
		}

		public Criteria andFtDateBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("FT_DATE between", value1, value2, "ftDate");
			return (Criteria) this;
		}

		public Criteria andFtDateNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("FT_DATE not between", value1, value2,
					"ftDate");
			return (Criteria) this;
		}

		public Criteria andFsContentIsNull() {
			addCriterion("FS_CONTENT is null");
			return (Criteria) this;
		}

		public Criteria andFsContentIsNotNull() {
			addCriterion("FS_CONTENT is not null");
			return (Criteria) this;
		}

		public Criteria andFsContentEqualTo(String value) {
			addCriterion("FS_CONTENT =", value, "fsContent");
			return (Criteria) this;
		}

		public Criteria andFsContentNotEqualTo(String value) {
			addCriterion("FS_CONTENT <>", value, "fsContent");
			return (Criteria) this;
		}

		public Criteria andFsContentGreaterThan(String value) {
			addCriterion("FS_CONTENT >", value, "fsContent");
			return (Criteria) this;
		}

		public Criteria andFsContentGreaterThanOrEqualTo(String value) {
			addCriterion("FS_CONTENT >=", value, "fsContent");
			return (Criteria) this;
		}

		public Criteria andFsContentLessThan(String value) {
			addCriterion("FS_CONTENT <", value, "fsContent");
			return (Criteria) this;
		}

		public Criteria andFsContentLessThanOrEqualTo(String value) {
			addCriterion("FS_CONTENT <=", value, "fsContent");
			return (Criteria) this;
		}

		public Criteria andFsContentLike(String value) {
			addCriterion("FS_CONTENT like", value, "fsContent");
			return (Criteria) this;
		}

		public Criteria andFsContentNotLike(String value) {
			addCriterion("FS_CONTENT not like", value, "fsContent");
			return (Criteria) this;
		}

		public Criteria andFsContentIn(List<String> values) {
			addCriterion("FS_CONTENT in", values, "fsContent");
			return (Criteria) this;
		}

		public Criteria andFsContentNotIn(List<String> values) {
			addCriterion("FS_CONTENT not in", values, "fsContent");
			return (Criteria) this;
		}

		public Criteria andFsContentBetween(String value1, String value2) {
			addCriterion("FS_CONTENT between", value1, value2, "fsContent");
			return (Criteria) this;
		}

		public Criteria andFsContentNotBetween(String value1, String value2) {
			addCriterion("FS_CONTENT not between", value1, value2, "fsContent");
			return (Criteria) this;
		}

		public Criteria andFdAmtIsNull() {
			addCriterion("FD_AMT is null");
			return (Criteria) this;
		}

		public Criteria andFdAmtIsNotNull() {
			addCriterion("FD_AMT is not null");
			return (Criteria) this;
		}

		public Criteria andFdAmtEqualTo(BigDecimal value) {
			addCriterion("FD_AMT =", value, "fdAmt");
			return (Criteria) this;
		}

		public Criteria andFdAmtNotEqualTo(BigDecimal value) {
			addCriterion("FD_AMT <>", value, "fdAmt");
			return (Criteria) this;
		}

		public Criteria andFdAmtGreaterThan(BigDecimal value) {
			addCriterion("FD_AMT >", value, "fdAmt");
			return (Criteria) this;
		}

		public Criteria andFdAmtGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("FD_AMT >=", value, "fdAmt");
			return (Criteria) this;
		}

		public Criteria andFdAmtLessThan(BigDecimal value) {
			addCriterion("FD_AMT <", value, "fdAmt");
			return (Criteria) this;
		}

		public Criteria andFdAmtLessThanOrEqualTo(BigDecimal value) {
			addCriterion("FD_AMT <=", value, "fdAmt");
			return (Criteria) this;
		}

		public Criteria andFdAmtIn(List<BigDecimal> values) {
			addCriterion("FD_AMT in", values, "fdAmt");
			return (Criteria) this;
		}

		public Criteria andFdAmtNotIn(List<BigDecimal> values) {
			addCriterion("FD_AMT not in", values, "fdAmt");
			return (Criteria) this;
		}

		public Criteria andFdAmtBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("FD_AMT between", value1, value2, "fdAmt");
			return (Criteria) this;
		}

		public Criteria andFdAmtNotBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("FD_AMT not between", value1, value2, "fdAmt");
			return (Criteria) this;
		}

		public Criteria andFiStatIsNull() {
			addCriterion("FI_STAT is null");
			return (Criteria) this;
		}

		public Criteria andFiStatIsNotNull() {
			addCriterion("FI_STAT is not null");
			return (Criteria) this;
		}

		public Criteria andFiStatEqualTo(BigDecimal value) {
			addCriterion("FI_STAT =", value, "fiStat");
			return (Criteria) this;
		}

		public Criteria andFiStatNotEqualTo(BigDecimal value) {
			addCriterion("FI_STAT <>", value, "fiStat");
			return (Criteria) this;
		}

		public Criteria andFiStatGreaterThan(BigDecimal value) {
			addCriterion("FI_STAT >", value, "fiStat");
			return (Criteria) this;
		}

		public Criteria andFiStatGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("FI_STAT >=", value, "fiStat");
			return (Criteria) this;
		}

		public Criteria andFiStatLessThan(BigDecimal value) {
			addCriterion("FI_STAT <", value, "fiStat");
			return (Criteria) this;
		}

		public Criteria andFiStatLessThanOrEqualTo(BigDecimal value) {
			addCriterion("FI_STAT <=", value, "fiStat");
			return (Criteria) this;
		}

		public Criteria andFiStatIn(List<BigDecimal> values) {
			addCriterion("FI_STAT in", values, "fiStat");
			return (Criteria) this;
		}

		public Criteria andFiStatNotIn(List<BigDecimal> values) {
			addCriterion("FI_STAT not in", values, "fiStat");
			return (Criteria) this;
		}

		public Criteria andFiStatBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("FI_STAT between", value1, value2, "fiStat");
			return (Criteria) this;
		}

		public Criteria andFiStatNotBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("FI_STAT not between", value1, value2, "fiStat");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table TREMARKS
	 * @mbggenerated  Sun Jan 24 19:51:04 CST 2016
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue,
				String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table TREMARKS
     *
     * @mbggenerated do_not_delete_during_merge Sun Jan 24 19:20:42 CST 2016
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}