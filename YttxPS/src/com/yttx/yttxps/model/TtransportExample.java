package com.yttx.yttxps.model;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

public class TtransportExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table TTRANSPORT
     *
     * @mbggenerated Sun Jan 10 16:31:14 CST 2016
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table TTRANSPORT
     *
     * @mbggenerated Sun Jan 10 16:31:14 CST 2016
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table TTRANSPORT
     *
     * @mbggenerated Sun Jan 10 16:31:14 CST 2016
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TTRANSPORT
     *
     * @mbggenerated Sun Jan 10 16:31:14 CST 2016
     */
    public TtransportExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TTRANSPORT
     *
     * @mbggenerated Sun Jan 10 16:31:14 CST 2016
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TTRANSPORT
     *
     * @mbggenerated Sun Jan 10 16:31:14 CST 2016
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TTRANSPORT
     *
     * @mbggenerated Sun Jan 10 16:31:14 CST 2016
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TTRANSPORT
     *
     * @mbggenerated Sun Jan 10 16:31:14 CST 2016
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TTRANSPORT
     *
     * @mbggenerated Sun Jan 10 16:31:14 CST 2016
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TTRANSPORT
     *
     * @mbggenerated Sun Jan 10 16:31:14 CST 2016
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TTRANSPORT
     *
     * @mbggenerated Sun Jan 10 16:31:14 CST 2016
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TTRANSPORT
     *
     * @mbggenerated Sun Jan 10 16:31:14 CST 2016
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TTRANSPORT
     *
     * @mbggenerated Sun Jan 10 16:31:14 CST 2016
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TTRANSPORT
     *
     * @mbggenerated Sun Jan 10 16:31:14 CST 2016
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table TTRANSPORT
     *
     * @mbggenerated Sun Jan 10 16:31:14 CST 2016
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andFsNoIsNull() {
            addCriterion("FS_NO is null");
            return (Criteria) this;
        }

        public Criteria andFsNoIsNotNull() {
            addCriterion("FS_NO is not null");
            return (Criteria) this;
        }

        public Criteria andFsNoEqualTo(String value) {
            addCriterion("FS_NO =", value, "fsNo");
            return (Criteria) this;
        }

        public Criteria andFsNoNotEqualTo(String value) {
            addCriterion("FS_NO <>", value, "fsNo");
            return (Criteria) this;
        }

        public Criteria andFsNoGreaterThan(String value) {
            addCriterion("FS_NO >", value, "fsNo");
            return (Criteria) this;
        }

        public Criteria andFsNoGreaterThanOrEqualTo(String value) {
            addCriterion("FS_NO >=", value, "fsNo");
            return (Criteria) this;
        }

        public Criteria andFsNoLessThan(String value) {
            addCriterion("FS_NO <", value, "fsNo");
            return (Criteria) this;
        }

        public Criteria andFsNoLessThanOrEqualTo(String value) {
            addCriterion("FS_NO <=", value, "fsNo");
            return (Criteria) this;
        }

        public Criteria andFsNoLike(String value) {
            addCriterion("FS_NO like", value, "fsNo");
            return (Criteria) this;
        }

        public Criteria andFsNoNotLike(String value) {
            addCriterion("FS_NO not like", value, "fsNo");
            return (Criteria) this;
        }

        public Criteria andFsNoIn(List<String> values) {
            addCriterion("FS_NO in", values, "fsNo");
            return (Criteria) this;
        }

        public Criteria andFsNoNotIn(List<String> values) {
            addCriterion("FS_NO not in", values, "fsNo");
            return (Criteria) this;
        }

        public Criteria andFsNoBetween(String value1, String value2) {
            addCriterion("FS_NO between", value1, value2, "fsNo");
            return (Criteria) this;
        }

        public Criteria andFsNoNotBetween(String value1, String value2) {
            addCriterion("FS_NO not between", value1, value2, "fsNo");
            return (Criteria) this;
        }

        public Criteria andFsNameIsNull() {
            addCriterion("FS_NAME is null");
            return (Criteria) this;
        }

        public Criteria andFsNameIsNotNull() {
            addCriterion("FS_NAME is not null");
            return (Criteria) this;
        }

        public Criteria andFsNameEqualTo(String value) {
            addCriterion("FS_NAME =", value, "fsName");
            return (Criteria) this;
        }

        public Criteria andFsNameNotEqualTo(String value) {
            addCriterion("FS_NAME <>", value, "fsName");
            return (Criteria) this;
        }

        public Criteria andFsNameGreaterThan(String value) {
            addCriterion("FS_NAME >", value, "fsName");
            return (Criteria) this;
        }

        public Criteria andFsNameGreaterThanOrEqualTo(String value) {
            addCriterion("FS_NAME >=", value, "fsName");
            return (Criteria) this;
        }

        public Criteria andFsNameLessThan(String value) {
            addCriterion("FS_NAME <", value, "fsName");
            return (Criteria) this;
        }

        public Criteria andFsNameLessThanOrEqualTo(String value) {
            addCriterion("FS_NAME <=", value, "fsName");
            return (Criteria) this;
        }

        public Criteria andFsNameLike(String value) {
            addCriterion("FS_NAME like", value, "fsName");
            return (Criteria) this;
        }

        public Criteria andFsNameNotLike(String value) {
            addCriterion("FS_NAME not like", value, "fsName");
            return (Criteria) this;
        }

        public Criteria andFsNameIn(List<String> values) {
            addCriterion("FS_NAME in", values, "fsName");
            return (Criteria) this;
        }

        public Criteria andFsNameNotIn(List<String> values) {
            addCriterion("FS_NAME not in", values, "fsName");
            return (Criteria) this;
        }

        public Criteria andFsNameBetween(String value1, String value2) {
            addCriterion("FS_NAME between", value1, value2, "fsName");
            return (Criteria) this;
        }

        public Criteria andFsNameNotBetween(String value1, String value2) {
            addCriterion("FS_NAME not between", value1, value2, "fsName");
            return (Criteria) this;
        }

        public Criteria andFiLoadMinIsNull() {
            addCriterion("FI_LOAD_MIN is null");
            return (Criteria) this;
        }

        public Criteria andFiLoadMinIsNotNull() {
            addCriterion("FI_LOAD_MIN is not null");
            return (Criteria) this;
        }

        public Criteria andFiLoadMinEqualTo(BigDecimal value) {
            addCriterion("FI_LOAD_MIN =", value, "fiLoadMin");
            return (Criteria) this;
        }

        public Criteria andFiLoadMinNotEqualTo(BigDecimal value) {
            addCriterion("FI_LOAD_MIN <>", value, "fiLoadMin");
            return (Criteria) this;
        }

        public Criteria andFiLoadMinGreaterThan(BigDecimal value) {
            addCriterion("FI_LOAD_MIN >", value, "fiLoadMin");
            return (Criteria) this;
        }

        public Criteria andFiLoadMinGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("FI_LOAD_MIN >=", value, "fiLoadMin");
            return (Criteria) this;
        }

        public Criteria andFiLoadMinLessThan(BigDecimal value) {
            addCriterion("FI_LOAD_MIN <", value, "fiLoadMin");
            return (Criteria) this;
        }

        public Criteria andFiLoadMinLessThanOrEqualTo(BigDecimal value) {
            addCriterion("FI_LOAD_MIN <=", value, "fiLoadMin");
            return (Criteria) this;
        }

        public Criteria andFiLoadMinIn(List<BigDecimal> values) {
            addCriterion("FI_LOAD_MIN in", values, "fiLoadMin");
            return (Criteria) this;
        }

        public Criteria andFiLoadMinNotIn(List<BigDecimal> values) {
            addCriterion("FI_LOAD_MIN not in", values, "fiLoadMin");
            return (Criteria) this;
        }

        public Criteria andFiLoadMinBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("FI_LOAD_MIN between", value1, value2, "fiLoadMin");
            return (Criteria) this;
        }

        public Criteria andFiLoadMinNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("FI_LOAD_MIN not between", value1, value2, "fiLoadMin");
            return (Criteria) this;
        }

        public Criteria andFiLoadMaxIsNull() {
            addCriterion("FI_LOAD_MAX is null");
            return (Criteria) this;
        }

        public Criteria andFiLoadMaxIsNotNull() {
            addCriterion("FI_LOAD_MAX is not null");
            return (Criteria) this;
        }

        public Criteria andFiLoadMaxEqualTo(BigDecimal value) {
            addCriterion("FI_LOAD_MAX =", value, "fiLoadMax");
            return (Criteria) this;
        }

        public Criteria andFiLoadMaxNotEqualTo(BigDecimal value) {
            addCriterion("FI_LOAD_MAX <>", value, "fiLoadMax");
            return (Criteria) this;
        }

        public Criteria andFiLoadMaxGreaterThan(BigDecimal value) {
            addCriterion("FI_LOAD_MAX >", value, "fiLoadMax");
            return (Criteria) this;
        }

        public Criteria andFiLoadMaxGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("FI_LOAD_MAX >=", value, "fiLoadMax");
            return (Criteria) this;
        }

        public Criteria andFiLoadMaxLessThan(BigDecimal value) {
            addCriterion("FI_LOAD_MAX <", value, "fiLoadMax");
            return (Criteria) this;
        }

        public Criteria andFiLoadMaxLessThanOrEqualTo(BigDecimal value) {
            addCriterion("FI_LOAD_MAX <=", value, "fiLoadMax");
            return (Criteria) this;
        }

        public Criteria andFiLoadMaxIn(List<BigDecimal> values) {
            addCriterion("FI_LOAD_MAX in", values, "fiLoadMax");
            return (Criteria) this;
        }

        public Criteria andFiLoadMaxNotIn(List<BigDecimal> values) {
            addCriterion("FI_LOAD_MAX not in", values, "fiLoadMax");
            return (Criteria) this;
        }

        public Criteria andFiLoadMaxBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("FI_LOAD_MAX between", value1, value2, "fiLoadMax");
            return (Criteria) this;
        }

        public Criteria andFiLoadMaxNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("FI_LOAD_MAX not between", value1, value2, "fiLoadMax");
            return (Criteria) this;
        }

        public Criteria andFiFitMinIsNull() {
            addCriterion("FI_FIT_MIN is null");
            return (Criteria) this;
        }

        public Criteria andFiFitMinIsNotNull() {
            addCriterion("FI_FIT_MIN is not null");
            return (Criteria) this;
        }

        public Criteria andFiFitMinEqualTo(BigDecimal value) {
            addCriterion("FI_FIT_MIN =", value, "fiFitMin");
            return (Criteria) this;
        }

        public Criteria andFiFitMinNotEqualTo(BigDecimal value) {
            addCriterion("FI_FIT_MIN <>", value, "fiFitMin");
            return (Criteria) this;
        }

        public Criteria andFiFitMinGreaterThan(BigDecimal value) {
            addCriterion("FI_FIT_MIN >", value, "fiFitMin");
            return (Criteria) this;
        }

        public Criteria andFiFitMinGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("FI_FIT_MIN >=", value, "fiFitMin");
            return (Criteria) this;
        }

        public Criteria andFiFitMinLessThan(BigDecimal value) {
            addCriterion("FI_FIT_MIN <", value, "fiFitMin");
            return (Criteria) this;
        }

        public Criteria andFiFitMinLessThanOrEqualTo(BigDecimal value) {
            addCriterion("FI_FIT_MIN <=", value, "fiFitMin");
            return (Criteria) this;
        }

        public Criteria andFiFitMinIn(List<BigDecimal> values) {
            addCriterion("FI_FIT_MIN in", values, "fiFitMin");
            return (Criteria) this;
        }

        public Criteria andFiFitMinNotIn(List<BigDecimal> values) {
            addCriterion("FI_FIT_MIN not in", values, "fiFitMin");
            return (Criteria) this;
        }

        public Criteria andFiFitMinBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("FI_FIT_MIN between", value1, value2, "fiFitMin");
            return (Criteria) this;
        }

        public Criteria andFiFitMinNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("FI_FIT_MIN not between", value1, value2, "fiFitMin");
            return (Criteria) this;
        }

        public Criteria andFiFitMaxIsNull() {
            addCriterion("FI_FIT_MAX is null");
            return (Criteria) this;
        }

        public Criteria andFiFitMaxIsNotNull() {
            addCriterion("FI_FIT_MAX is not null");
            return (Criteria) this;
        }

        public Criteria andFiFitMaxEqualTo(BigDecimal value) {
            addCriterion("FI_FIT_MAX =", value, "fiFitMax");
            return (Criteria) this;
        }

        public Criteria andFiFitMaxNotEqualTo(BigDecimal value) {
            addCriterion("FI_FIT_MAX <>", value, "fiFitMax");
            return (Criteria) this;
        }

        public Criteria andFiFitMaxGreaterThan(BigDecimal value) {
            addCriterion("FI_FIT_MAX >", value, "fiFitMax");
            return (Criteria) this;
        }

        public Criteria andFiFitMaxGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("FI_FIT_MAX >=", value, "fiFitMax");
            return (Criteria) this;
        }

        public Criteria andFiFitMaxLessThan(BigDecimal value) {
            addCriterion("FI_FIT_MAX <", value, "fiFitMax");
            return (Criteria) this;
        }

        public Criteria andFiFitMaxLessThanOrEqualTo(BigDecimal value) {
            addCriterion("FI_FIT_MAX <=", value, "fiFitMax");
            return (Criteria) this;
        }

        public Criteria andFiFitMaxIn(List<BigDecimal> values) {
            addCriterion("FI_FIT_MAX in", values, "fiFitMax");
            return (Criteria) this;
        }

        public Criteria andFiFitMaxNotIn(List<BigDecimal> values) {
            addCriterion("FI_FIT_MAX not in", values, "fiFitMax");
            return (Criteria) this;
        }

        public Criteria andFiFitMaxBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("FI_FIT_MAX between", value1, value2, "fiFitMax");
            return (Criteria) this;
        }

        public Criteria andFiFitMaxNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("FI_FIT_MAX not between", value1, value2, "fiFitMax");
            return (Criteria) this;
        }

        public Criteria andFiStatIsNull() {
            addCriterion("FI_STAT is null");
            return (Criteria) this;
        }

        public Criteria andFiStatIsNotNull() {
            addCriterion("FI_STAT is not null");
            return (Criteria) this;
        }

        public Criteria andFiStatEqualTo(BigDecimal value) {
            addCriterion("FI_STAT =", value, "fiStat");
            return (Criteria) this;
        }

        public Criteria andFiStatNotEqualTo(BigDecimal value) {
            addCriterion("FI_STAT <>", value, "fiStat");
            return (Criteria) this;
        }

        public Criteria andFiStatGreaterThan(BigDecimal value) {
            addCriterion("FI_STAT >", value, "fiStat");
            return (Criteria) this;
        }

        public Criteria andFiStatGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("FI_STAT >=", value, "fiStat");
            return (Criteria) this;
        }

        public Criteria andFiStatLessThan(BigDecimal value) {
            addCriterion("FI_STAT <", value, "fiStat");
            return (Criteria) this;
        }

        public Criteria andFiStatLessThanOrEqualTo(BigDecimal value) {
            addCriterion("FI_STAT <=", value, "fiStat");
            return (Criteria) this;
        }

        public Criteria andFiStatIn(List<BigDecimal> values) {
            addCriterion("FI_STAT in", values, "fiStat");
            return (Criteria) this;
        }

        public Criteria andFiStatNotIn(List<BigDecimal> values) {
            addCriterion("FI_STAT not in", values, "fiStat");
            return (Criteria) this;
        }

        public Criteria andFiStatBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("FI_STAT between", value1, value2, "fiStat");
            return (Criteria) this;
        }

        public Criteria andFiStatNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("FI_STAT not between", value1, value2, "fiStat");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table TTRANSPORT
     *
     * @mbggenerated do_not_delete_during_merge Sun Jan 10 16:31:14 CST 2016
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table TTRANSPORT
     *
     * @mbggenerated Sun Jan 10 16:31:14 CST 2016
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}